// Generated by Selenium IDE
const { Builder, By, Key, until, webdriver } = require('selenium-webdriver')
var chrome = require ('selenium-webdriver/chrome');
require('chromedriver')

describe('évaluer_employeur', function() {
  this.timeout(300000)
  let driver
  let vars
  beforeEach(async function() {
    driver = new Builder().forBrowser('chrome').setChromeOptions((new chrome.Options).addArguments('--headless').addArguments('--no-sandbox').addArguments('--disable-dev-shm-usage')).build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  async function testconnexion() {
    await driver.get("https://jobaas-backend-dev.herokuapp.com//")
    await driver.manage().window().setRect({ width: 1366, height: 658 })
    await driver.findElement(By.linkText("Se connecter")).click()
    await driver.sleep(10000)
    await driver.findElement(By.id("email")).sendKeys("elangal@3il.fr")
    await driver.findElement(By.id("password")).sendKeys("string9S#")
    await driver.findElement(By.id("state")).click()
    await driver.findElement(By.css(".ant-select-item-option-active > .ant-select-item-option-content")).click()
    await driver.findElement(By.id("email")).click()
    await driver.findElement(By.id("password")).click()
    await driver.findElement(By.css(".Login_content__DXecL")).click()
    await driver.findElement(By.css(".ant-btn-primary")).click()
  }
  it('évaluer_employeur', async function() {
    // Test name: évaluer_employeur
    // Step # | name | target | value    // 1 | run | testconnexion | 
    testconnexion()
    // 2 | setWindowSize | 1936x1096 | 
    await driver.manage().window().setRect({ width: 1936, height: 1096 })
    // 3 | click | linkText=Menu Employé |
    await driver.sleep(17000)
    await driver.get(driver.getCurrentUrl())  
    await driver.findElement(By.linkText("Menu Employé")).click()
    // 4 | click | linkText=Contrats | 
    await driver.sleep(10000)
    await driver.findElement(By.linkText("Contrats")).click()
    // 5 | click | linkText=Evaluer mon employeur | 
    await driver.sleep(10000)
    await driver.findElement(By.linkText("Evaluer mon employeur")).click()
    // 6 | click | css=.grid-10:nth-child(1) .dv-star-rating-star:nth-child(4) > i | 
    await driver.sleep(17000)
    await driver.get(driver.getCurrentUrl())  
    await driver.findElement(By.css(".grid-10:nth-child(1) .dv-star-rating-star:nth-child(4) > i")).click()
    // 7 | click | id=comment | 
    await driver.sleep(10000)
    await driver.findElement(By.id("comment")).click()
    // 8 | type | id=comment | Réglo dans les paiements.
    await driver.sleep(10000)
    await driver.findElement(By.id("comment")).sendKeys("Réglo dans les paiements.")
    // 9 | click | css=.dv-star-rating-empty-star:nth-child(4) > i | 
    await driver.sleep(17000)
    await driver.findElement(By.css(".dv-star-rating-empty-star:nth-child(4) > i")).click()
    // 10 | click | id=commentJobaas | 
    await driver.sleep(10000)
    await driver.findElement(By.id("commentJobaas")).click()
    // 11 | type | id=commentJobaas | Efficace
    await driver.sleep(10000)
    await driver.findElement(By.id("commentJobaas")).sendKeys("Efficace")
    // 12 | click | css=.ant-btn > span | 
    await driver.sleep(10000)
    await driver.findElement(By.css(".ant-btn > span")).click()
  })
})
